#! /usr/bin/perl -w

sub parse {
	my ($name, $file) = @_;
	my $output = "";

	open  my $fh, "<", $file or die "Could not open report $name: $!";

	my %g;
	my @content;

	## get rid of the first nine lines of the output.
	foreach (1 .. 9) {
		<$fh>;
	}

	while (my $line=<$fh>) {
		next if $line =~ /^\n/;
		last if $line =~ /Predicted protein/;
		push @content, $line;
	}

	foreach my $line (@content) {
		chomp $line;

		my %item;

		my (@stuff) = $line =~ /(\S+)/g;
		my $gene_num = $stuff[0];
		my $gene_def = $name."-fgenesh.$gene_num";

		if ($stuff[2] eq 'TSS' or $stuff[2] eq 'PolA') {
			$item{gene_num} = $stuff[0];
			$item{strand} = $stuff[1] eq '+' ? '1' : '-1';
			$item{type}   = $stuff[2];
			$item{b}  = $stuff[3];
			$item{e}  = $stuff[3];
			$item{score}  = $stuff[4];
			$g{$gene_def}{score} += $item{score};
		
		}
		else {
			$item{gene_num} = $stuff[0];
			$item{strand}   = $stuff[1] eq '+' ? '1' : '-1';
			$item{type}     = $stuff[3];
			$item{b}    = $stuff[4];
			$item{e}      = $stuff[6];
			$item{score}    = $stuff[7];
			$item{ORF_b}    = $stuff[8];
			$item{ORF_e}    = $stuff[10];
			$item{length}   = $stuff[11];
			$g{$gene_def}{score} += $item{score};
		}
		push @{$g{$gene_def}{parts}}, \%item;
	}

	for my $k (sort keys %g) {
		my $def = $g{$k};
		my @starts = sort { $a <=> $b } map { $_->{b}, $_->{e} } @{$def->{parts}};
		my $strand = $def->{parts}[0]{strand};

		my ($b,$e) = @starts[0, -1];

		my @attrs = (
			"ID=$k", "Name=$k"
		);

		my @cols = (
			$name, "fgenesh", "mRNA",
			$b, $e, $def->{score}, $strand >= 0 ? '+' : '-',
			'.', join(';', @attrs)
		);

		$output .= join("\t", @cols) . "\n";

		# Assume we start at phase 0 in either direction.
		my $phase = 0;
		my @children = @{$def->{parts}};

		my $i = 1;
		my $chcount = scalar grep { $_->{type} !~ /TSS|PolA/ } @children;
		for my $ch (@children) {
			next if ($ch->{type} =~ /TSS|PolA/);

			my $len = ($ch->{e} - $ch->{b} + 1);

			my $nextphase = ($phase - $len % 3) % 3;
			my $n = $ch->{strand} >= 0 ? $i : $chcount-$i+1;
			my @chattrs = (
				"ID=$k:cds:$n",
				"Name=$k:cds:$n",
				"Parent=$k"
			);
			my @chcols = (
				$name, 'fgenesh', 'CDS', $ch->{b}, $ch->{e},
				$ch->{score},
				$ch->{strand} >= 0 ? '+' : '-',
				$ch->{strand} >= 0 ? $phase : (3-$nextphase)%3,
				join(';', @chattrs)
			);
			$output .= join("\t", @chcols) . "\n";

			++$i;
			$phase = $nextphase;
		}
	}
	
	close $fh;
	return $output;
}

print "##gff-version 3\n";
for my $fn (@ARGV) {
	my $name = "unknown";
	$fn =~ /((contig|scaffold)_?\d+)/ and $name = $1;
	print parse($name, $fn);
}
